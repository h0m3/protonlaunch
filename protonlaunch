#!/usr/bin/env bash
# Script that allows calling Steam instance of proton directly
# Copyright 2022 Artur 'h0m3' Paiva <dr.hoome@gmail.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIEDi
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Protonlaunch IS NOT associated with Valve Software. Steam, Valve and Proton
# are developed by and trademarks of of Valve Software.
#

# Show message logs
function info() {
    echo ":: INFO: ${1}"
}

# Raise an error and terminate the application
function error() {
    echo ":: ERROR: ${1}"
    exit 1
}

# Finding Steam
if [ -z ${STEAM_COMPAT_CLIENT_INSTALL_PATH} ]; then
    if [ -e "${_STEAM_PATH}/steam.sh" ]; then
        export STEAM_COMPAT_CLIENT_INSTALL_PATH="${_STEAM_PATH}"
    elif [ -e "${HOME}/.local/share/Steam/steam.sh" ]; then
        export STEAM_COMPAT_CLIENT_INSTALL_PATH="${HOME}/.local/share/Steam"
    elif [ -h "${HOME}/.steam/steam" ]; then
        export STEAM_COMPAT_CLIENT_INSTALL_PATH="$(readlink ${HOME}/.steam/steam)"
    else
        error "Unable to find Steam path, please set _STEAM_PATH"
    fi
    info "Steam found at '${STEAM_COMPAT_CLIENT_INSTALL_PATH}'"
fi

# Finding Steam library
if [ -z "${_STEAM_LIBRARY_PATH}" ]; then
    if [ -d "${STEAM_COMPAT_CLIENT_INSTALL_PATH}/steamapps/common" ]; then
        info "Using '${STEAM_COMPAT_CLIENT_INSTALL_PATH}' as library path"
        _STEAM_LIBRARY_PATH="${STEAM_COMPAT_CLIENT_INSTALL_PATH}"
    else
        error "Unable to find Steam library, make sure that Proton is installed and set _STEAM_LIBRARY_PATH if necessary"
    fi
fi

# Getting Proton version
if [ -z "${_PROTON_VERSION}" ]; then
    if ! ls "${_STEAM_LIBRARY_PATH}/steamapps/common" | grep -i proton 2>&1 > /dev/null; then
        error "Unable to find Proton on '${_STEAM_LIBRARY_PATH}', make sure proton is installed and set _PROTON_VERSION if necessary"
    fi
    _PROTON_VERSION="$(ls "${_STEAM_LIBRARY_PATH}/steamapps/common" | grep -i proton | head -n 1)"
    info "Using proton '${_PROTON_VERSION}'"
fi

# Checking for proton
if [ -e "${_STEAM_LIBRARY_PATH}/steamapps/common/${_PROTON_VERSION}/proton" ]; then
    proton="${_STEAM_LIBRARY_PATH}/steamapps/common/${_PROTON_VERSION}/proton"
else
    error "Unable to find Proton installation on '${_STEAM_LIBRARY_PATH}/steamapps/common/${_PROTON_VERSION}'"
fi

# Set WINEPREFIX or PROTONPREFIX
if [ -z "${STEAM_COMPAT_DATA_PATH}" ]; then
    if [ ! -z "${WINEPREFIX}" ]; then
        export STEAM_COMPAT_DATA_PATH="${WINEPREFIX}"
    elif [ ! -z "${PROTONPREFIX}" ]; then
        export STEAM_COMPAT_DATA_PATH="${PROTONPREFIX}"
    else
        info "Using prefix '${HOME}/.proton'"
        export STEAM_COMPAT_DATA_PATH="${HOME}/.proton"
    fi
fi

if [ ! -d "${STEAM_COMPAT_DATA_PATH}" ]; then
    info "Creating '${STEAM_COMPAT_DATA_PATH}'"
    mkdir "${STEAM_COMPAT_DATA_PATH}"
fi

# Launch proton
command="${*}"
info "Starting Steam Proton with command '${command}'"
"${proton}" run "${command}"
